/**
 * JSX Builder
 * Ref: https://www.typescriptlang.org/docs/handbook/jsx.html
 * Copyright 2022, Indra Gunawan <indra.sync@gmail.com>
 */

import { Tag, Attrs, ClassComponent, FunctionComponent } from './h-types.ts'
import { vdom, VElement } from './vdom.ts'

function jsx(tag: Tag | typeof jsx, props: Attrs, ...children: unknown[]): VElement {
  let node: VElement

  if (props) {
    if (props.children) {
      children = props.children
      delete props.children
    }
  } else {
    props = {}
  }

  if (tag === jsx) node = vdom.createDocumentFragment()
  else if (typeof tag === 'function') {
    if (typeof tag.prototype.render === 'function') {
      const component = new (tag as ClassComponent)()
      tag = component.render.bind(component)
    }
    return (tag as FunctionComponent)(props)
  }
  else node = vdom.createElement(tag as string)

  // moved to runtime handler

  for (const name in props) {
    const value = props[name]
    if (typeof value === 'string') {
      node.setAttribute(name, value)
    } else {
      console.log(`prop '${name}' is object: ${value}`)
    }
  }

  Array.isArray(children)
    ? node.append(...children)
    : node.append(children)

  return node
}

export { jsx, jsx as jsxs, jsx as Fragment }
